install.packages(c("DT", "shiny", "shinycssloaders", "shinydashboard", "shinyWidgets"))
install.packages(c("doFuture", "dplyr", "DT", "readr", "shiny"))
shiny::runApp()
shiny::runApp('D:/Dropbox/Mediation/Shiny APP dev/R code/Shiny Code/Mediation Round2/Mediation-app-2021/v20 20210525')
setwd("D:/Dropbox/Mediation/Shiny APP dev/R code/Shiny Code/Mediation Round2/Mediation-app-2021/v20 20210525")
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
Prior = list(ma  = c(rep(0, nvarX)),
Aa  = Aa_var * diag(nvarX),
mgb = c(rep(0, nvarX+1)),
Agb = Abg_var * diag(nvarX+1),
ml = c(rep(0, nvarX+1)),
Al = Al_var * diag(nvarZ+1), #"input Al parameter, default is 0.01"
nu  = nu_var,
qy  = c(qy_var, qy_var),
qm  = c(qm_var, qm_var),
)
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
?apply
matrix(1:9,nrow=3)
apply(matrix(1:9,nrow=3),2,hdi,credMass =0.95)
tapply(matrix(1:9,nrow=3),2,hdi,credMass =0.95)
t(apply(matrix(1:9,nrow=3),2,hdi,credMass =0.95))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
