shiny::runApp('v20 20210525')
shiny::runApp('v20 20210525')
rordprobitGibbs
library(bayesm)
library(bayesm)
rordprobitGibbs
rmvpGibbs
rmvpGibbs_rcpp_loop
install.packages("MNP")
library(MNP)
mnp
p = 3
n = 500
beta = c(-1,1,1,2)
Sigma = matrix(c(1, 0.5, 0.5, 1), ncol=2)
Sigma
k = length(beta)
X1 = matrix(runif(n*p,min=0,max=2),ncol=p)
n
p
str(X1)
X2 = matrix(runif(n*p,min=0,max=2),ncol=p)
str(X2)
X = createX(p, na=2, nd=NULL, Xa=cbind(X1,X2), Xd=NULL, DIFF=TRUE, base=p)
"creatX
"
createX
X = createX(p, na=2, nd=NULL, Xa=cbind(X1,X2), Xd=NULL, DIFF=TRUE, base=p)
str(X)
x[1:10,]
X[1:10,]
X[1:120,]
indmax = function(x) {which(max(x)==x)}
Xbeta = X%*%beta
str(Xbeta)
beta
str(X)
n
k
w = as.vector(crossprod(chol(sigma),matrix(rnorm((p-1)*n),ncol=n))) + Xbeta
w = as.vector(crossprod(chol(Sigma),matrix(rnorm((p-1)*n),ncol=n))) + Xbeta
w
w = matrix(w, ncol=(p-1), byrow=TRUE)
w
maxw = apply(w, 1, max)
maxw
y = apply(w, 1, which(max(w)==w)
)
y = apply(w, 1, indmax)
y
table(y)
felse(maxw < 0, p, y)
ifelse(maxw < 0, p, y)
maxw
y[475:500]
maxw[475:500]
indmax = function(x) {which(max(x)==x)}
Xbeta = X%*%beta
w = as.vector(crossprod(chol(sigma),matrix(rnorm((p-1)*n),ncol=n))) + Xbeta
w = matrix(w, ncol=(p-1), byrow=TRUE)
maxw = apply(w, 1, max)
y = apply(w, 1, indmax)
indmax = function(x) {which(max(x)==x)}
Xbeta = X%*%beta
w = as.vector(crossprod(chol(Sigma),matrix(rnorm((p-1)*n),ncol=n))) + Xbeta
w = matrix(w, ncol=(p-1), byrow=TRUE)
maxw = apply(w, 1, max)
y = apply(w, 1, indmax)
y[475:500]
maxw[475:500]
y = ifelse(maxw < 0, p, y)
y[475:500]
y[495:500]
wmax[495:500]
maxw[495:500]
w[495:500,]
sigma=Sigma
Data1 = list(p=p, y=y, X=X)
Mcmc1 = list(R=R, keep=1)
R=10
Data1 = list(p=p, y=y, X=X)
Mcmc1 = list(R=R, keep=1)
out = rmnpGibbs(Data=Data1, Mcmc=Mcmc1)
str(out)
out = rmnpGibbs(Data=Data1, Mcmc=Mcmc1)
Data1 = list(p=p, y=y, X=X)
Mcmc1 = list(R=1, keep=1)
out = rmnpGibbs(Data=Data1, Mcmc=Mcmc1)
rmnpGibbs
loopout
BayesmConstant.nprint
p=p
y=y
X=X
pm1 = p - 1
betabar = rep(0, k)
A = 0.01 * diag(k)
nu = pm1 + 3
V = nu * diag(pm1)
R = 1
beta0 = rep(0, k)
sigma0 = diag(pm1)
keep = 1
nprint = 1
loopout = rmnpGibbs_rcpp_loop(R=R, keep, nprint, pm1, y, X,beta0, sigma0, V, nu, betabar, A)
rmnpGibbs_rcpp_loop
rmnpGibbs
library(bayesm)
loopout = rmnpGibbs_rcpp_loop(R=R, keep, nprint, pm1, y, X,beta0, sigma0, V, nu, betabar, A)
rmnpGibbs_rcpp_loop <- function(R, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A) {
.Call('_bayesm_rmnpGibbs_rcpp_loop', PACKAGE = 'bayesm', R, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A)
}
loopout = rmnpGibbs_rcpp_loop(R=R, keep, nprint, pm1, y, X,beta0, sigma0, V, nu, betabar, A)
Mcmc1 = list(R=1000, keep=1)
out = rmnpGibbs(Data=Data1, Mcmc=Mcmc1)
str(loopout)
itime = proc.time()[3]
loopout=list()
for(r in 1:R)
{ loopout[r] = rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X,beta0, sigma0, V, nu, betabar, A)
beta0 = loopout[r]$betadraw
sigma0 = loopout[r]$sigmadraw
}
ctime = proc.time()[3]
cat(" Total Time Elapsed: ", round((ctime - itime)/60, 2),fill = TRUE)
itime = proc.time()[3]
loopout=list()
for(r in 1:R)
{ loopout[[r]] = rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X,beta0, sigma0, V, nu, betabar, A)
beta0 = loopout[[r]]$betadraw
sigma0 = loopout[[r]]$sigmadraw
}
ctime = proc.time()[3]
cat(" Total Time Elapsed: ", round((ctime - itime)/60, 2),fill = TRUE)
loopout[[r]] = rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, c(beta0), c(sigma0), V, nu, betabar, A)
beta0
r
rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, c(beta0), c(sigma0), V, nu, betabar, A)
R = 1
beta0 = rep(0, k)
sigma0 = diag(pm1)
keep = 1
nprint = 1
rmnpGibbs_rcpp_loop <- function(R, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A) {
.Call('_bayesm_rmnpGibbs_rcpp_loop', PACKAGE = 'bayesm', R, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A)
}
loopout=list()
r=1
loopout[[r]] = rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, c(beta0), c(sigma0), V, nu, betabar, A)
loopout[[r]] = rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A)
beta0 = loopout[[r]]$betadraw
beta0
sigma0 = loopout[[r]]$sigmadraw
sigma0
r=2
loopout[[r]] = rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A)
str(rep(0, k))
as.numeric(beta0)
beta0 = as.numeric(loopout[[r]]$betadraw)
sigma0 = as.numeric(loopout[[r]]$sigmadraw)
r=1
beta0 = as.numeric(loopout[[r]]$betadraw)
sigma0 = as.numeric(loopout[[r]]$sigmadraw)
beta0
sigma0
r=2
loopout[[r]] = rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A)
str(diag(pm1))
sigma0 = matrix(loopout[[1]]$sigmadraw,nrow=pm1)
sigma0
str(sigma0)
r
loopout[[r]] = rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A)
sigma0
diag(pm1)
beta0
rep(0, k)
r
r=1
beta0 = rep(0, k)
sigma0 = diag(pm1)
loopout=list()
r=1
loopout[[r]] = rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A)
beta0 = as.numeric(loopout[[r]]$betadraw)
sigma0 = matrix(loopout[[r]]$sigmadraw,nrow=pm1)
str(loopout[[r]])
beta0
sigma0
r=2
loopout[[r]] = rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A)
beta0 = as.numeric(loopout[[r]]$betadraw)
sigma0 = matrix(loopout[[r]]$sigmadraw,nrow=pm1)
str()
str(X)
X*beta0
X%*5beta0
X%*%beta0
str(X)
r
beta0 = c(loopout[[1]]$betadraw)
beta0
loopout[[r]] = rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A)
beta0 = rep(0, k)
rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A)
str(rep(0, k))
str(c(loopout[[1]]$betadraw))
beta0 = c(loopout[[r]]$betadraw)
oopout[[r]] = rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A)
loopout[[r]] = rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A)
r
beta0 = as.numeric(loopout[[1]]$betadraw)
beta0
loopout[[r]] = rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A)
beta0 = rep(0, k)
loopout[[r]] = rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A)
r
loopout[[r]] = rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A)
beta0
loopout[[r]] = rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A)
sigma0 = diag(pm1)
loopout[[r]] = rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A)
sigma0 = matrix(loopout[[1]]$sigmadraw,nrow=pm1)
loopout[[r]] = rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A)
sigma0 = diag(pm1)
loopout[[r]] = rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A)
?contant
?constant
library(Rcpp)
cppFunction
cppFunction(beta0)
loopout=list()
beta0 = rep(0, k)
sigma0 = diag(pm1)
r=1
oopout[[r]] = rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A)
loopout[[r]] = rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A)
beta0 = as.numeric(loopout[[r]]$betadraw)
sigma0 = matrix(loopout[[r]]$sigmadraw,nrow=pm1)
r=2
beta0
sigma0
loopout[[r]] = rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A)
R = 1
beta0 = rep(0, k)
sigma0 = diag(pm1)
loopout=list()
r=1
out= rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A)
loopout[[r]] = out
beta0 = as.numeric(out$betadraw)
sigma0 = matrix(out$sigmadraw,nrow=pm1)
r=2
out= rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A)
loopout[[r]] = out
beta0 = as.numeric(out$betadraw)
sigma0 = matrix(out$sigmadraw,nrow=pm1)
r=1
loopout=list()
beta0 = rep(0, k)
sigma0 = diag(pm1)
out= rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A)
loopout[[r]] = out
rm(bet0)
beta0 = as.numeric(out$betadraw)
rm(beta0)
beta0 = as.numeric(out$betadraw)
rm(sigma0)
sigma0 = matrix(out$sigmadraw,nrow=pm1)
r
r=2
out= rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A)
beta0 = rep(0, k)
sigma0 = diag(pm1)
out= rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A)
beta0 = rep(1, k)
out= rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A)
sigma0=Sigma
out= rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A)
beta0 = rep(0, k)
sigma0 = diag(pm1)
out= rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A)
beta0 = as.numeric(out$betadraw)
out= rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A)
sigma0
sigma0[1,2]=sigma[2,1]=0.5
out= rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A)
sigma0[1,2]=sigma[2,1]=0
out= rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A)
sigma0[1,2]=0.5
out= rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A)
sigma0
sigma0[1,2]=0
sigma0[2,1]=0.5
out= rmnpGibbs_rcpp_loop(R=1, keep, nprint, pm1, y, X, beta0, sigma0, V, nu, betabar, A)
sigma0
pm1 = p - 1
betabar = rep(0, k)
A = 0.01 * diag(k)
nu = pm1 + 3
V = nu * diag(pm1)
# MCMC:
R = 1
beta0 = rep(0, k)
sigma0 = diag(pm1)
sigma0=Sigma
keep = 1
nprint = 1
Data1 = list(p=p, y=y, X=X)
Mcmc1 = list(R=1000, keep=1)
out = rmnpGibbs(Data=Data1, Mcmc=Mcmc1)
cat(" Summary of Betadraws ", fill=TRUE)
betatilde = out$betadraw / sqrt(out$sigmadraw[,1])
attributes(betatilde)$class = "bayesm.mat"
summary(betatilde, tvalues=beta)
cat(" Summary of Sigmadraws ", fill=TRUE)
sigmadraw = out$sigmadraw / out$sigmadraw[,1]
attributes(sigmadraw)$class = "bayesm.var"
summary(sigmadraw, tvalues=as.vector(Sigma[upper.tri(Sigma,diag=TRUE)]))
plot(betatilde,tvalues=beta)
str(out)
?trimatu
??trimatu
?solve
ghkvec
rmnlIndepMetrop
